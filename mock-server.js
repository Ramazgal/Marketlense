// Mock Server для тестирования UI без реального API
require('dotenv').config();
const express = require('express');

const app = express();
app.use(express.json());
app.use(express.static('.'));

console.log('🧪 Starting MOCK server for UI testing...');
console.log('AMVERA_API_KEY present:', !!process.env.AMVERA_API_KEY);

// Mock AI response для тестирования интерфейса
app.post('/test-strategy', async (req, res) => {
  console.log('✅ Received request:', JSON.stringify(req.body, null, 2));
  
  // Имитация задержки API (1-2 секунды)
  await new Promise(resolve => setTimeout(resolve, 1500));
  
  // Mock ответ от GPT-4.1 (структурированный JSON)
  const mockStrategy = {
    risks: [
      "Конкуренция по цене: ваша цена 2990₽ находится между двумя конкурентами (2700₽ и 3500₽)",
      "Недостаточное количество отзывов: 50 отзывов за месяц может быть мало для укрепления доверия",
      "Высокий рейтинг создаёт ожидания: клиенты ожидают идеального сервиса при 4.8 звёздах",
      "Риск ценовой войны: конкурент B продаёт дешевле, что может привлечь чувствительных к цене покупателей"
    ],
    pricing: [
      "Оптимальное позиционирование: ваша цена 2990₽ – это золотая середина между премиум (3500₽) и бюджет (2700₽)",
      "Рекомендация: подчеркните соотношение цена/качество в описании товара",
      "Тестируйте скидки: попробуйте акцию 2790₽ (-200₽) для привлечения клиентов конкурента B",
      "Психологическое ценообразование: рассмотрите цену 2999₽ вместо 2990₽ для восприятия 'почти 3000'"
    ],
    marketing: [
      "Акцент на рейтинг 4.8: это ваше конкурентное преимущество – используйте в заголовках и изображениях",
      "UGC-контент: стимулируйте покупателей оставлять фото/видео отзывы с бонусами",
      "Сравнительная таблица: создайте инфографику 'Мы vs Конкуренты' с акцентом на рейтинг и отзывы",
      "Таргетированная реклама: настройте рекламу на аудиторию конкурента B (более низкий рейтинг 4.2)",
      "Кросс-продажи: предложите аксессуары (чехлы, кабели) для увеличения среднего чека"
    ],
    todo: [
      "📊 Анализ: изучить негативные отзывы конкурентов (что не нравится покупателям)",
      "📸 Контент: обновить карточку товара – добавить 5-7 качественных фото с разных углов",
      "🎁 Акция: запустить временную скидку до 2790₽ на 7 дней для тестирования спроса",
      "💬 Отзывы: запросить отзывы у последних 20 покупателей (email-рассылка с бонусом 100₽)",
      "📈 SEO: оптимизировать заголовок и описание под запросы 'беспроводные наушники с высоким рейтингом'",
      "🎯 Реклама: настроить ретаргетинг на посетителей карточек конкурентов",
      "📦 Упаковка: добавить благодарственную открытку в посылку с QR-кодом на отзыв"
    ]
  };
  
  console.log('✅ Sending MOCK response (GPT-4.1 simulation)');
  res.json({ success: true, strategy: mockStrategy });
});

app.get('/health', (req, res) => {
  res.json({ status: 'ok', mode: 'MOCK' });
});

app.listen(3000, '0.0.0.0', () => {
  console.log('✅ MOCK Test server running on port 3000');
  console.log('📝 This is a MOCK server - returns simulated AI responses');
  console.log('🌐 Open: http://localhost:3000/test-ai.html');
});
